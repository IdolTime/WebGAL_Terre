name: Release IdolTime Editor

on:
  push:
    tags:
      - '*.*'

jobs:
  build-mac:
    name: Build MacOS Binary
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: sh release-mac.sh
      - name: Compress
        run: 7z a -tzip IdolTime_Editor_Mac.zip release/*
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: IdolTime_Editor_Mac
          path: IdolTime_Editor_Mac.zip
  build-windows:
    name: Build Windows Binary
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Build
        shell: bash
        run: ./release.sh
      - name: Compress
        run: 7z a -tzip IdolTime_Editor_Windows.zip release/*
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: IdolTime_Editor_Windows
          path: IdolTime_Editor_Windows.zip
  build-windows-nsis:
    name: Build Windows Setup
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Build
        shell: bash
        run: ./release.sh
      - name: Build Setup
        shell: bash
        run: mkdir bundle && yarn nsis-bundle
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: IdolTime_Editor_Windows_Setup
          path: bundle/IdolTime_Editor_Windows_Setup.exe
  release:
    name: Release
    permissions: write-all
    runs-on: ubuntu-latest
    needs: ['build-mac','build-windows','build-windows-nsis']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: IdolTime Editor ${{ github.ref }}
          body_path: releasenote.md
          draft: true
          prerelease: false

      - name: Upload MacOS Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: IdolTime_Editor_Mac/IdolTime_Editor_Mac.zip
          asset_name: IdolTime_Editor_Mac_${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: IdolTime_Editor_Windows/IdolTime_Editor_Windows.zip
          asset_name: IdolTime_Editor_Windows_${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload Windows Setup Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: IdolTime_Editor_Windows_Setup/IdolTime_Editor_Windows_Setup.exe
          asset_name: IdolTime_Editor_Windows_Setup_${{ github.ref_name }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable
